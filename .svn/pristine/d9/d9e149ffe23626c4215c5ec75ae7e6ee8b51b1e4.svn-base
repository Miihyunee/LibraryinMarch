package checkout;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import admin.l_book.ReBookDTO;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;


public class ResBookController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String url = request.getRequestURI();
		String path = request.getContextPath();
		ResBookDAO dao = new ResBookDAO();

		// 예약신청 기능
		if (url.indexOf("res_book.do") != -1) {
			int r_bookid = Integer.parseInt(request.getParameter("b_id")); // 도서코드
			String r_memno = request.getParameter("m_id"); // 회원코드
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("r_bookid", r_bookid);
			map.put("m_id", r_memno);
			dao.insert_resbook(map);
			String page = "/user/search/searchResult.jsp";
			response.sendRedirect(path + page);
		}

		// 예약 도서 리스트
		else if (url.contains("myReBook.do")) {
			String r_memno = request.getParameter("mId");
			List<ReBookDTO> myReBook = dao.myReBook(r_memno);
			request.setAttribute("myReBook", myReBook);
			RequestDispatcher rd = request.getRequestDispatcher("/user/book/myReBook.jsp");
			rd.forward(request, response);
		}
}
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}
}
