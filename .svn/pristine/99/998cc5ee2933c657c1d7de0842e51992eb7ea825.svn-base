package checkout;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class CheckoutController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String m_id = request.getParameter("m_id");
		int b_id = Integer.parseInt(request.getParameter("b_id"));
		// System.out.println("[checkout 컨트롤러]" + m_id + " & " + b_id);
		CheckoutDAO dao = new CheckoutDAO();
		String url = request.getRequestURI();

		if (url.contains("checkout.do")) {
			int check = dao.checkMloan(m_id, b_id); // 회원의 도서대출 가능여부 확인
			String result = ""; // 처리결과 확인을 위한 파라미터
			//System.out.println("[checkout 컨트롤러] 1" + m_id + " & " + b_id);

			switch (check) {
			// 대출신청한 회원의 대출가능 여부(도서대출 가능여부 & 동일 책 중복신청여부) 검증
			case 1:
				System.out.println("[checkout 컨트롤러] check1 " + m_id + " & " + b_id);
				result = dao.checkout(m_id, b_id);
				break;
			case 0: // 신청불가
				System.out.println("[checkout 컨트롤러] check0 " + m_id + " & " + b_id);
				result = "Not possible";
				break;
			}
			System.out.println("[checkout 컨트롤러]" + result);
			response.getWriter().println(result);

			// 신청했던 페이지로 돌아가기?!
//			RequestDispatcher rd = request.getRequestDispatcher("/user/search/searchResult.jsp");
//			rd.forward(request, response);
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
