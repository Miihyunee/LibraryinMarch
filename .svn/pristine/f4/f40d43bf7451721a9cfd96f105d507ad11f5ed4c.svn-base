package bookSearch;

import java.util.List;

import org.apache.ibatis.session.SqlSession;

import admin.book.BookDAO;
import admin.book.BookDTO;
import admin.book.Lo_BookDTO;
import admin.book.Re_BookDTO;
import sqlmap.MybatisManager;

public class CheckoutDAO {
	BookDTO dtoB = new BookDTO();
	Lo_BookDTO dtoL = new Lo_BookDTO();
	Re_BookDTO dtoR = new Re_BookDTO();

	// (b_id 1개 당)도서 대여가능여부(소장상태): 대여가능(비치중) or 대여불가 (boolean/String)
	public boolean checkBookState(int b_id) {
		SqlSession session = null;
		List<BookDTO> list = null;
		int l_bookid;
		
		try {
			session = MybatisManager.getInstance().openSession();
			
			if () {
				amount-cntLo_book
			}
			String chkoutState = session.selectOne("search.resultCount", L_bookid);
		}else {
			
		}
		
		return false;
		
	}

	// (b_id 1개 당)책 한권의 도서 예약가능여부(소장상태): 대여가능(비치중) or 대여불가 (boolean/String)

	// 검색도서목록 별 대여가능여부 리스트

	public List<String> stockState(int b_id, BookDTO dtoB) {
		SqlSession session = null;
		List<BookDTO> list = null;
		Lo_BookDTO dtoL = new Lo_BookDTO();
		BookDAO dao = new BookDAO();

		try {
			session = MybatisManager.getInstance().openSession();
			for (BookDTO dto : list) {
				int L_bookid = dtoB.getB_id();
				String State = session.selectOne("search.resultCount", L_bookid);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (session != null)
				session.close();
		}
		return list;
	}

	// 책 한권의 도서 예약 가능여부
}
