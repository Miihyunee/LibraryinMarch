package search;

import java.io.IOException;
import java.util.List;

import admin.book.BookDTO;
import checkout.CheckoutDAO;
import common.PageUtil;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class SearchController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		SearchDAO dao1 = new SearchDAO();
		CheckoutDAO dao2 = new CheckoutDAO();
		String url = request.getRequestURI();
		String contextPath = request.getContextPath();

		if (url.contains("search.do")) {
			String option = "all"; // 페이지 나누기용 검색옵션
			// 자료검색페이지 → 키워드로 통합검색(도서명, 작가, 출판사)
			String keyword = request.getParameter("keyword"); // 검색키워드
			String resultPage = "";
			String view = request.getParameter("view");
			// String view = "view1"; // 검색결과 뷰타입 옵션
			if (view.equals("view1") || view == null) {
				resultPage = "/user/book/view1.jsp";
			} else if (view.equals("view2")) {
				resultPage = "/user/book/view2.jsp";
			}

			// 페이지 설정
			int count = dao1.resultCount(option, keyword);
			int curPage = 1; // 페이지 초기화
			if (request.getParameter("curPage") != null) {
				curPage = Integer.parseInt(request.getParameter("curPage"));
			}
			common.PageUtil page = new PageUtil(count, curPage);
			int start = page.getPageBegin();
			int end = page.getPageEnd();

			// 검색 결과 목록 가져오기
			List<BookDTO> list = dao1.totSearch(keyword, start, end);
			System.out.println("[서치dao] list: " + list);
			List stateinfo = dao2.listState(list);
			// System.out.println("stateinfo = "+stateinfo);
			request.setAttribute("list", list);
			request.setAttribute("count", count);
			request.setAttribute("keyword", keyword);
			request.setAttribute("page", page);
			request.setAttribute("stateinfo", stateinfo);
			request.setAttribute("option", option);

			RequestDispatcher rd = request.getRequestDispatcher(resultPage);
			rd.forward(request, response);
		} else if (url.contains("moveTo.do")) {
			String view = request.getParameter("view");
			String resultPage = "";
			if (view.equals("view1")) {
				resultPage = "/user/book/view1.jsp";
			} else if (view.equals("view2")) {
				resultPage = "/user/book/view2.jsp";
			}

			String option = request.getParameter("option"); // 페이지 나누기용 검색옵션
			switch (option) {
			case "all":
				// 사용자가 입력한 검색어
				String keyword = request.getParameter("keyword");

				// 페이지 설정
				int count1 = dao1.resultCount(option, keyword);
				// int curPage = Integer.parseInt(request.getParameter("curPage"));
				int movePage1 = Integer.parseInt(request.getParameter("page"));
				common.PageUtil page1 = new PageUtil(count1, movePage1);
				int start1 = page1.getPageBegin();
				int end1 = page1.getPageEnd();

				// 검색 결과 목록 가져오기
				List<BookDTO> list1 = dao1.totSearch(keyword, start1, end1);
				System.out.println("[서치dao] list: " + list1);
				List stateinfo1 = dao2.listState(list1);
				System.out.println("[서치dao] stateinfo: " + stateinfo1);
				request.setAttribute("list", list1);
				request.setAttribute("count", count1);
				request.setAttribute("keyword", keyword);
				request.setAttribute("page", page1);
				request.setAttribute("stateinfo", stateinfo1);
				request.setAttribute("option", option);
				break;
			case "detail":
				// 사용자가 입력한 검색어
				String b_name = request.getParameter("b_name");
				String b_author = request.getParameter("b_author");
				String b_pub = request.getParameter("b_pub");

				// 페이지 설정
				int count2 = dao1.resultCount(option, b_name, b_author, b_pub);
				int movePage2 = Integer.parseInt(request.getParameter("page"));
				common.PageUtil page2 = new PageUtil(count2, movePage2);
				int start2 = page2.getPageBegin();
				int end2 = page2.getPageEnd();

				// 검색 결과 목록 가져오기
				List<BookDTO> list2 = dao1.detailSearch(b_name, b_author, b_pub, start2, end2);
				System.out.println("[서치dao] list: " + list2);
				List<Boolean> stateinfo2 = dao2.listState(list2);
				System.out.println("[서치dao] stateinfo: " + stateinfo2);
				request.setAttribute("list", list2);
				request.setAttribute("count", count2);
				request.setAttribute("b_name", b_name);
				request.setAttribute("b_author", b_author);
				request.setAttribute("b_pub", b_pub);
				request.setAttribute("page", page2);
				request.setAttribute("stateinfo", stateinfo2);
				request.setAttribute("option", option);
				break;
			}

			RequestDispatcher rd = request.getRequestDispatcher(resultPage);
			rd.forward(request, response);

		} else if (url.contains("detailSearch.do")) {
			String option = "detail";
			String b_name = "";
			if (request.getParameter("b_name") != null) {
				b_name = request.getParameter("b_name");
			}
			String b_author = "";
			if (request.getParameter("b_author") != null) {
				b_author = request.getParameter("b_author");
			}
			String b_pub = "";
			if (request.getParameter("b_pub") != null) {
				b_pub = request.getParameter("b_pub");
			}
			String view = request.getParameter("view");
			String resultPage = "";
			if (view.equals("view1") || view == null) {
				view = "view1";
				resultPage = "/user/book/view1.jsp";
			} else if (view.equals("view2")) {
				resultPage = "/user/book/view2.jsp";
			}

			// 페이지 설정
			int count = dao1.resultCount(option, b_name, b_author, b_pub);
			int curPage = 1; // 페이지 초기화
			if (request.getParameter("curPage") != null) {
				curPage = Integer.parseInt(request.getParameter("curPage"));
			}
			common.PageUtil page = new PageUtil(count, curPage);
			int start = page.getPageBegin();
			int end = page.getPageEnd();

			List<BookDTO> list = dao1.detailSearch(b_name, b_author, b_pub, start, end);
			System.out.println("[서치dao] 상세검색list: " + list);
			List<Boolean> stateinfo = dao2.listState(list);
			System.out.println("[서치dao] 상태목록stateinfo = " + stateinfo);
			request.setAttribute("list", list);
			request.setAttribute("count", count);
			request.setAttribute("b_name", b_name);
			request.setAttribute("b_author", b_author);
			request.setAttribute("b_pub", b_pub);
			request.setAttribute("page", page);
			request.setAttribute("stateinfo", stateinfo);
			request.setAttribute("option", option);

			RequestDispatcher rd = request.getRequestDispatcher(resultPage);
			rd.forward(request, response);

		} else if (url.contains("bookInfo.do")) {
			// 도서 상세정보 페이지
			int b_id = Integer.parseInt(request.getParameter("b_id"));
			BookDTO dto = dao1.showDetails(b_id);
			String state = dao2.isAvailable(b_id);
			request.setAttribute("dto", dto);
			request.setAttribute("state", state);
			
			RequestDispatcher rd = request.getRequestDispatcher("/user/book/bookinfo.jsp");
			rd.forward(request, response);
		}

	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
