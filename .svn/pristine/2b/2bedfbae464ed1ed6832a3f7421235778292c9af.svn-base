package myLibrary;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

public class MyLibraryController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String url = request.getRequestURI();
		String path = request.getContextPath();
		MyLibraryDAO dao = new MyLibraryDAO();
		HttpSession session = request.getSession();
		if (url.contains("myLibray_info.do")) { // 나의 서재
			String mId = request.getParameter("mId");
			MyLibraryDTO myLibrary = dao.myLibrary_list(mId);
			request.setAttribute("myLibrary", myLibrary);
			RequestDispatcher rd = request.getRequestDispatcher("/user/book/myLibrary.jsp");
			rd.forward(request, response);
		} else if (url.contains("myLoanBook.do")) { // 나의 대출 도서 현황
			int mNo = Integer.parseInt(request.getParameter("mNo"));
			List<MyLibraryDTO> myLoanBook = dao.myLoanBook(mNo);
			request.setAttribute("myLoanBook", myLoanBook);
			RequestDispatcher rd = request.getRequestDispatcher("/user/book/myLoanBook.jsp");
			rd.forward(request, response);
		} else if (url.contains("myHistory.do")) { // 나의 대출 이력
			int mNo = Integer.parseInt(request.getParameter("mNo"));
			List<MyLibraryDTO> myHistory = dao.myHistory(mNo);
			request.setAttribute("myHistory", myHistory);
			RequestDispatcher rd = request.getRequestDispatcher("/user/book/myHistory.jsp");
			rd.forward(request, response);
		} else if (url.contains("renew.do")) { // 연장 신청
			int mNo = Integer.parseInt(request.getParameter("mNo"));
			int bId = Integer.parseInt(request.getParameter("bId"));
			// 예약 여부 확인
			int reCnt = dao.checkReservation(bId);
			session.setAttribute("mNo", mNo);
			if (reCnt == 0) { // 예약 없으면 연장
				Map<String, Object> map = new HashMap<>();
				map.put("l_memno", mNo);
				map.put("l_bookid", bId);
				dao.updateReturn(map);
				String page = "/user/book/myLibrary.jsp?message=success";
				response.sendRedirect(path + page);
			} else if (reCnt > 0) { // 예약 있으면 alert
				String page = "/user/book/myLibrary.jsp?message=error";
				response.sendRedirect(path + page);
			}
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}
}
